// Generated by CoffeeScript 1.4.0
(function() {
  "use strict";

  describe('A nick mentioned notifier', function() {
    var notification;
    notification = chat.NickMentionedNotification;
    it('should notify when nick is mentioned', function() {
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe')).toBe(true);
      expect(notification.shouldNotify('thragtusk', 'thragtusk')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'bill and sallyjoe and thragtusk')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe', 'bobsallyjoe is a sallyjoe of sorts')).toBe(true);
    });
    it('should notify when a nick containing regular expression characters in mentioned', function() {
      return expect(notification.shouldNotify('sallyjoe[circ]', 'sallyjoe[circ]: hey')).toBe(true);
    });
    it('should not evaluate nick as a regular expression', function() {
      return expect(notification.shouldNotify('[ab]*', 'aaaaab')).toBe(false);
    });
    it('should be case insensitive ', function() {
      expect(notification.shouldNotify('sallyjoe', 'Sallyjoe')).toBe(true);
      expect(notification.shouldNotify('thragtusk', 'tHrAgTuSk')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe', 'bill and SALLYJOE and thragtusk')).toBe(true);
    });
    it('should notify when there is trailing punctuation', function() {
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe!')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe?')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe!?!?!!!!??')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe*')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe:')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe;')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe-')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe~')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', "oh, it's sallyjoe...")).toBe(true);
      expect(notification.shouldNotify('sallyjoe', 'bye sallyjoe.')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe', 'ssssallyjoe! Sallyjoe, you there?')).toBe(true);
    });
    it('should notify when there is a preceding @', function() {
      return expect(notification.shouldNotify('sallyjoe', '@sallyjoe, look at this!')).toBe(true);
    });
    it('should notify when there is a preceding ,', function() {
      return expect(notification.shouldNotify('sallyjoe', 'thragtusk,sallyjoe,joe: come to my desk')).toBe(true);
    });
    it('should notify with variable preceding and trailing whitespace', function() {
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe     ')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', '     sallyjoe')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe', '     sallyjoe     ')).toBe(true);
    });
    it('should notify with combinations of @, punctuation and whitespace', function() {
      expect(notification.shouldNotify('sallyjoe', 'I mean @sallyjoe*')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe', 'oh its @sallyjoe!!??  ')).toBe(true);
    });
    it('should notify when nick is in an action', function() {
      expect(notification.shouldNotify('sallyjoe', '\u0001ACTION sallyjoe\u0001')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', '\u0001ACTION waves to sallyjoe\u0001')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', '\u0001ACTION slaps sallyjoe with a large trout\u0001')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe', '\u0001ACTION sallyjoe hides\u0001')).toBe(true);
    });
    it('should not notify when nick is not mentioned', function() {
      expect(notification.shouldNotify('thragtusk', 'sallyjoe')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', '-sallyjoe-')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe::')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe--')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'asallyjoe')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoea')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe!?!;')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', '@@sallyjoe')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', '#sallyjoe')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', '#nick#')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe#')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoesallyjoe')).toBe(false);
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe1')).toBe(false);
      return expect(notification.shouldNotify('sallyjoe', '1sallyjoe')).toBe(false);
    });
    return it('should match with optional underscores', function() {
      expect(notification.shouldNotify('sallyjoe', 'sallyjoe______')).toBe(true);
      expect(notification.shouldNotify('sallyjoe', '@sallyjoe_... you there?')).toBe(true);
      expect(notification.shouldNotify('sallyjoe__', 'sallyjoe')).toBe(true);
      return expect(notification.shouldNotify('sallyjoe____', 'sallyjoe_')).toBe(true);
    });
  });

}).call(this);
